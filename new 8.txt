WITH cte_tranches AS  (select t.deal_id as tranches_deal_id, STRING_AGG(t.currency || '@' || t.amount || '@'  || products.name || '@' || t.term::REAL || t.term_unit_type, '||')  as tranches_details from ldt.ldt.tranches t 
left outer join ldt.ldt.products products on products.code = t.product_code 
group by t.deal_id), 
 cte_deals_without_borrowers AS 
(select distinct deal.id as deal_id_no_borrower from ldt.ldt.deals deal  where not exists (select da.deal_id from ldt.ldt.deals_actors da 
 inner join ldt.ldt.deals_actors_roles dar on dar.deal_actor_id = da.id where da.deal_id = deal.id and dar.role_code = 'BORROWER')) 
select concat('LDT-', deal.id) as "ID Deal", pl.name as "CACIB organisation - Product Line", deal.region as "Region", deal.country as "Deal country", f.booking_date as "Credit Agreement Signing",
(select status_name as "Deal Status" from ( select status_name, case when status_value > 0 then status_value when status_value = 0 then 100 else status_value + 200 end as status_value from ( select sta.code as status_code, sta."value" as status_value, sta.name as status_name from ldt.ldt.deals_statuses dsta, ldt.ldt.statuses sta where dsta.deal_id = deal.id and dsta.status_code = sta.code group by deal.id, sta.name, sta.code, sta."value" ) as subquery order by status_value desc limit 1 ) as subquery),
 a.name as "CPH Borrower Name", deal.currency as "Deal Currency", f.global_facility_amount_at_signing as "Deal Global Facility Amount At Signing"
, STRING_AGG(products.name, '||') as "Deal Product", STRING_AGG(mrs.name, '||') as "Deal Title", STRING_AGG(tt.name, '||') as "Deal Role",
uf.name as "Deal Use of funds", deal.business_sector_id as "Business Sector", tranches_details.tranches_details as "First Tranches Details 4", 
'' as "Additionnal information >>>",  ms.name as "Distribution Segment",  STRING_AGG(t.name , '||') as "Origination Team", Case When deal.sustainibility_linked Then 'Yes' Else 'No' End as "Sustainability linked Loan (ESG index)", Case When deal.green  Then 'Yes' Else 'No' End  as "Green Loan" , Case When deal.eligible_to_league_table  Then 'Yes' Else 'No' End  as "Eligible to League Tables (Bookrunner)",
 tranches_details.tranches_details as "Other Tranches Details 7", deal.confidentialitylevel_code as "Confidentiality level", deal.file_name as "fileName"
from ldt.ldt.deals deal 
inner join ldt.ldt.deals_actors dac on dac.deal_id = deal.id 
 inner join ldt.ldt.deals_actors_roles dar on dar.deal_actor_id = dac.id and dar.role_code = 'BORROWER' 
inner join ldt.ldt.actors a on a.id = dac.actor_id 
inner join ldt.ldt.deals_statuses dst on dst.deal_id = deal.id 
inner join ldt.ldt.statuses s on dst.status_code = s.code 
left outer join ldt.ldt.market_segments ms on ms.id = deal.market_segment_id 
left outer join ldt.ldt.finalizations f on f.deal_id = deal.id and f.active = true 
left outer join cte_tranches tranches_details on tranches_details.tranches_deal_id = deal.id
left outer join ldt.ldt.deals_origination_teams ot on ot.deals_id = deal.id 
left outer join ldt.ldt.teams t on t.code = ot.originationteams_code  
left outer join ldt.ldt.states stt on stt.code = deal.state_code 
left outer join ldt.ldt.product_lines pl on pl.id = deal.product_line_id 
left outer join ldt.ldt.credit_committees cc on cc.deal_id = deal.id and cc.active = true 
left outer join ldt.ldt.tranches tranches on tranches.deal_id = deal.id 
left outer join ldt.ldt.products products on products.code = tranches.product_code 
left outer join ldt.ldt.uses_of_funds uf on uf.code = deal.useoffunds_code 
left outer join ldt.ldt.mandates m on m.deal_id = deal.id and m.active = true 
left outer join ldt.ldt.mandates_roles mr on m.id = mr.mandates_id 
left outer join ldt.ldt.mandates_titles mt on m.id = mt.mandates_id 
left outer join ldt.ldt.titles tt on tt.code = mt.titles_code 
left outer join ldt.ldt.mandate_roles mrs on mrs.code = mr.roles_code 
where dst.last_modified_date = (select max(dtt1.last_modified_date ) from ldt.ldt.deals_statuses dtt1 where dtt1.deal_id = deal.id) 
group by deal.id, ms.name, uf.name , stt.name ,deal.business_sector_id, pl.name, deal.region, deal.country,
f.booking_date, a.name, deal.currency, f.global_facility_amount_at_signing, tranches_details.tranches_details, dst.status_code, s.name
 UNION 
select concat('LDT-', deal.id) as "ID Deal", pl.name as "CACIB organisation - Product Line", deal.region as "Region", deal.country as "Deal country", f.booking_date as "Credit Agreement Signing",
(select status_name as "Deal Status" from ( select status_name, case when status_value > 0 then status_value when status_value = 0 then 100 else status_value + 200 end as status_value from ( select sta.code as status_code, sta."value" as status_value, sta.name as status_name from ldt.ldt.deals_statuses dsta, ldt.ldt.statuses sta where dsta.deal_id = deal.id and dsta.status_code = sta.code group by deal.id, sta.name, sta.code, sta."value" ) as subquery order by status_value desc limit 1 ) as subquery)
, '', deal.currency as "Deal Currency", f.global_facility_amount_at_signing as "Deal Global Facility Amount At Signing"
, STRING_AGG(products.name, '||') as "Deal Product", STRING_AGG(mrs.name, '||') as "Deal Title", STRING_AGG(tt.name, '||') as "Deal Role",
uf.name as "Deal Use of funds", deal.business_sector_id as "Business Sector", tranches_details.tranches_details as "First Tranches Details 4", 
'' as "Additionnal information >>>",  ms.name as "Distribution Segment",  STRING_AGG(t.name , '||') as "Origination Team", Case When deal.sustainibility_linked Then 'Yes' Else 'No' End as "Sustainability linked Loan (ESG index)", Case When deal.green  Then 'Yes' Else 'No' End  as "Green Loan" , Case When deal.eligible_to_league_table  Then 'Yes' Else 'No' End  as "Eligible to League Tables (Bookrunner)",
 tranches_details.tranches_details as "Other Tranches Details 7", deal.confidentialitylevel_code as "Confidentiality level", deal.file_name as "fileName"
from ldt.ldt.deals deal 
inner join cte_deals_without_borrowers on deal.id = cte_deals_without_borrowers.deal_id_no_borrower 
 inner join ldt.ldt.deals_statuses dst on dst.deal_id = deal.id 
 inner join ldt.ldt.statuses s on dst.status_code = s.code 
left outer join ldt.ldt.market_segments ms on ms.id = deal.market_segment_id 
left outer join ldt.ldt.finalizations f on f.deal_id = deal.id and f.active = true 
left outer join cte_tranches tranches_details on tranches_details.tranches_deal_id = deal.id 
left outer join ldt.ldt.deals_origination_teams ot on ot.deals_id = deal.id 
left outer join ldt.ldt.teams t on t.code = ot.originationteams_code  
left outer join ldt.ldt.states stt on stt.code = deal.state_code 
left outer join ldt.ldt.product_lines pl on pl.id = deal.product_line_id 
left outer join ldt.ldt.credit_committees cc on cc.deal_id = deal.id and cc.active = true 
left outer join ldt.ldt.tranches tranches on tranches.deal_id = deal.id 
left outer join ldt.ldt.products products on products.code = tranches.product_code 
left outer join ldt.ldt.uses_of_funds uf on uf.code = deal.useoffunds_code 
left outer join ldt.ldt.mandates m on m.deal_id = deal.id and m.active = true 
left outer join ldt.ldt.mandates_roles mr on m.id = mr.mandates_id 
left outer join ldt.ldt.mandates_titles mt on m.id = mt.mandates_id 
left outer join ldt.ldt.titles tt on tt.code = mt.titles_code 
left outer join ldt.ldt.mandate_roles mrs on mrs.code = mr.roles_code 
where dst.last_modified_date = (select max(dtt1.last_modified_date ) from ldt.ldt.deals_statuses dtt1 where dtt1.deal_id = deal.id) 
group by deal.id, ms.name, uf.name , stt.name ,deal.business_sector_id, pl.name, deal.region, deal.country,
f.booking_date, deal.currency, f.global_facility_amount_at_signing, tranches_details.tranches_details, dst.status_code, s.name
